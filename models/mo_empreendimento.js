const Sequelize = require('sequelize')

const sequelize = require('../util/DBconnection')

const Empreendimento = sequelize.define('empreendimentos', {
  id_empreendimento: {
    type: Sequelize.INTEGER,
    autoIncrement: true,
    allowNull: false,
    primaryKey: true
  },
  nome: Sequelize.STRING(70),
  endereco: Sequelize.STRING(50),
  complemento: Sequelize.STRING(50),
  bairro: Sequelize.STRING(20),
  municipio: Sequelize.STRING(30),
  uf: Sequelize.STRING(2),
  cep: Sequelize.STRING(9),
  telefones: Sequelize.STRING(50),
  email: Sequelize.STRING,
  area_total: Sequelize.DECIMAL(10, 2),
  area_equivalente: Sequelize.DECIMAL(10, 2),
  data_inicio: Sequelize.DATEONLY,
  data_conclusao: Sequelize.DATEONLY,
  data_habitese: Sequelize.DATEONLY,
  num_incorporacao: Sequelize.STRING(20),
  num_alvara: Sequelize.STRING(20),
  num_projeto: Sequelize.STRING(20),
  engenheiro: Sequelize.STRING(50),
  crea: Sequelize.STRING(10),
  tipo: Sequelize.INTEGER,
  referencia: Sequelize.INTEGER,
  juros_financiamento: Sequelize.DECIMAL(10, 4),
  id_empreiteira: Sequelize.INTEGER,
  id_empresa: Sequelize.INTEGER,
  taxa_vpl: Sequelize.DECIMAL(10, 4),
  custo_adm: Sequelize.INTEGER,
  corretagem_perc: Sequelize.DECIMAL(10, 4),
  bonus_perc: Sequelize.DECIMAL(10, 4),
  terceiros: Sequelize.INTEGER,
  empreend_status: Sequelize.INTEGER,
  id_indice: Sequelize.INTEGER,
  taxa_vpl_negativo: Sequelize.DECIMAL(10, 4),
  desc_av_bancaria: Sequelize.DECIMAL(10, 4),
  area_privativa: Sequelize.DECIMAL(10, 2),
  qtde_unidades: Sequelize.INTEGER,
  apelido: Sequelize.STRING(20),
  incorporacao: Sequelize.INTEGER,
  percexecutado: Sequelize.DECIMAL(10, 4),
  limitedescontoavista: Sequelize.DECIMAL(10, 2),
  antigo: Sequelize.INTEGER,
  desconto_oportunidade: Sequelize.DECIMAL(10, 4),
  ctb_tipo: Sequelize.INTEGER,
  ctb_scp: Sequelize.INTEGER,
  ctb_enviado: Sequelize.INTEGER,
  desconto_qdoinserido: Sequelize.DECIMAL(10, 4),
  id_engenheiro: Sequelize.INTEGER,
  custoobraencerrado: Sequelize.INTEGER,
  valor_vpl_negativo: Sequelize.DECIMAL(10, 2),
  desconto_avista_corretor: Sequelize.DECIMAL(10, 2),
  area_privativa_aptos: Sequelize.DECIMAL(10, 2),
  desc_av_dinheiro: Sequelize.DECIMAL(10, 2),
  encerrado: Sequelize.INTEGER,
  desc_av_direta: Sequelize.DECIMAL(10, 2),
  desc_av_lojas: Sequelize.DECIMAL(10, 2),
  data_conclusao2: Sequelize.DATEONLY,
  id_padrao_empreendimento: Sequelize.INTEGER,
  valor_cub: Sequelize.DOUBLE,
  valor_contrato: Sequelize.DOUBLE,
  percentual_mo: Sequelize.DOUBLE,
  percentual_material: Sequelize.DOUBLE,
  valor_taxas_impostos: Sequelize.DOUBLE,
  custototal: Sequelize.DECIMAL(10, 2),
  cubporm2: Sequelize.DECIMAL(5, 2),
  custototalviab: Sequelize.DECIMAL(10, 2),
  cubporm2viab: Sequelize.DECIMAL(10, 2),
  valor_taxas_impostos_material: Sequelize.DOUBLE,
  endereco_pedido: Sequelize.TEXT,
  tabweb_bancaria: Sequelize.STRING(20),
  tabweb_direta: Sequelize.STRING(20),
  tabweb_bancaria_cota: Sequelize.STRING(20),
  tabweb_direta_cota: Sequelize.STRING(20),
  nagarantia: Sequelize.BOOLEAN,
  incorporacao_data: Sequelize.DATEONLY,
  projeto_data: Sequelize.DATEONLY,
  alvara_data: Sequelize.DATEONLY,
  matricula_num: Sequelize.STRING(20),
  matricula_num_ofic_reg_imov: Sequelize.STRING(2),
  lap_num: Sequelize.STRING(20),
  lap_data: Sequelize.DATEONLY,
  lap_orgao: Sequelize.STRING(20),
  banco: Sequelize.STRING(5),
  agencia: Sequelize.STRING(10),
  conta_corrente: Sequelize.STRING(20),
}, {
  timestamp: false,
  createdAt: false,
  updatedAt: false
});

module.exports = Empreendimento
